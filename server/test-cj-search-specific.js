const { CJAPIClient } = require('./src/cj-dropshipping/cj-api-client');

async function testCJSearchSpecific() {
  console.log('üîç === TEST RECHERCHE CJ AVEC MOTS-CL√âS SP√âCIFIQUES ===');
  
  try {
    // Initialiser le client CJ
    const client = new CJAPIClient(
      process.env.CJ_EMAIL,
      process.env.CJ_API_KEY,
      { tier: 'plus', debug: true }
    );
    
    console.log('üîë Connexion √† l\'API CJ...');
    await client.login();
    console.log('‚úÖ Connexion r√©ussie');
    
    // Test avec diff√©rents mots-cl√©s
    const keywords = [
      'phone',
      'smartphone',
      'case',
      'charger',
      'headphones',
      'watch',
      'bag',
      'shirt',
      'shoes',
      'laptop'
    ];
    
    for (const keyword of keywords) {
      console.log(`\nüîç Test avec le mot-cl√©: "${keyword}"`);
      
      try {
        const results = await client.searchProducts(keyword, {
          pageSize: 5,
          countryCode: 'US'
        });
        
        console.log(`üìä R√©sultats pour "${keyword}":`);
        console.log(`  - Total: ${results.total || 0}`);
        console.log(`  - Produits trouv√©s: ${results.list?.length || 0}`);
        
        if (results.list && results.list.length > 0) {
          console.log(`  - Premier produit: ${results.list[0].productName || 'N/A'}`);
          console.log(`  - Prix: $${results.list[0].productSellPrice || 'N/A'}`);
        }
        
        // Pause entre les recherches pour respecter le rate limiting
        await new Promise(resolve => setTimeout(resolve, 2000));
        
      } catch (error) {
        console.log(`‚ùå Erreur pour "${keyword}": ${error.message}`);
      }
    }
    
    console.log('\n‚úÖ Test de recherche sp√©cifique termin√©');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
  }
}

// Ex√©cuter le test
testCJSearchSpecific();
